ISSUE
OK・画面回転時の対応（Livedata化？）
OK・EditのVMいっぱいできちゃわない？
OK・Editで画面回転すると落ちる
OK・EditのFrag破棄時、VMも破棄したい
OK・更新時元の文字出す
OK・余白部分とか文字クリックは、全部チェック動作にする
OK・項目編集は文字クリックより別ボタンがよい
OK・登録が何度も押せないようにする
OK・一つの登録で二つ登録される問題
OK・二つ登録して消すと、一個消えてないときある
OK・Edit後、EditのFragは閉じてしまう
OK・自動リセットが効かない
OK・手動リセットダイアログ展開時、回転でリーク発生
OK・Insert,Updateの復旧
OK・DB作成前にSelectが走るのはまずい
OK・まともにTypeConverter書く
OK・日付まわりまともに書く
OK・上部デザイン
×全部OKなら確認OKを出したい
×左にアプリアイコン
OK・アイコン要所に
OK・削除ボタンもすこし地味に
OK・カラー
×・ヘアライン的
×・Edit画面（複数行）
OK・マテリアルパーツの色
OK・ステータスバーの色
OK・アイコンの色
OK・アプリのイメージアイコン
OK・もう少し幅大きく
OK・アプリ名出す
OK・削除ボタン見切れ
×・Item間の線
×・削除に確認ダイアログ
・Adapterリークしない？Listener解除してないけど大丈夫？
・ObserveForeverはみんな解除しないとだめじゃね？
・全LiveData系のsingle化？イベントだけでいいのか？調査
・ObservableListでいいの？
・いつまでたってもAppが落とされない場合のリセット対応？
・OnClickListener系は解除せんでええのか？
・イベント設定系をメソッド化
・入力値のバリデーション関係
    最大文字数、行数、ellipsize
・長くすると削除が押せない問題

ーーー
＠・Edit開いた時ANRになることある
＠・HELPアイコン→HELPを開く→マニュアル作成
・リリース準備
・GITリポジトリ用意
・広告仕込む方法調査
＠・アイテムクリックは削除ボタン以外全部チェック切り替え
＠・編集を長押しに移行



STEP
OK・画面遷移（アイテム編集）
OK・アイテム編集
OK・永続化実装
    　　操作　　Dao呼んで更新
    画面 ->　VM ->　モデル
    　　 <-　　 <-
       購読　　購読
OK・CRUD
OK・チェックボックスViewに足す、Checkちゃんと制御して保持
・チェック済みのやつわかりやすく、というか確認しました感を出す
OK・日付表示
OK・０時自動リセット
    →リセット時間設定
    １、デーモンみたいの作ってBGで常駐→ある意味楽だし設定も変えやすい、実装手間
    ２、初回起動時の０時をとってそれプラス２４hでリセット、設定云々言い出すとめんどい
        とりまこっちで実装
OK・手動リセットボタン
・UIなんとかする
・ISSUE消化


ーーー
未来：
・GPS警告
・時間警告
・写真保持
・チェック履歴保持
・見た目変更
・自動リセットON/OFF
・i18n


MILESTONE
・7/2中に追加、削除は完成させたい
・デバッグ等に２日、リリース準備に1日
・UIをなんとかする1日
・GPSは次回対応
・初回リリース7/9目指す
・チェック＆手動更新で1日

↑無理でした

・今週（7/16まで）中に実装、リリース準備にいきたい

↑無理でした２

・来週中（~7/23）にリリース😂
あとはISSUEとかUI系とか。大枠はほぼできた。

・ブヒー、八月になってまう
エラー出過ぎ、ISSUE増えすぎ

ーーー
自動リセット仕様：

初回起動時、起動日時が記録される
たとえば7/22の10:00とする
２回目以降
最終起動日時（last）は7/22の10:00
今(now)が、7/23の9:00とすると

lastの０時を取得（7/22,0:00）
nowの０時を取得（7/23,0:00）
now-lastが24h以上ならreset

lastとnowは常に0:00しかとらず、lastがnowより遅くなることはない

case: lastとnowが同日
last 7/22 0:00~23:59 -> 0:00
now 7/22 0:00~23:59 -> 0:00
0:00 - 0:00 = 0:00
→リセット不要。問題なし

case: lastよりnowが早い
→最終起動の０時を取るので、last＝nowにはなっても last>nowにはならない

case: nowがlastの1日後以降
last 7/22 0:00~23:59 -> 0:00
now 7/23 0:00~23:59 -> 0:00

7/23 0:00 - 7/22 0:00 = 1d -> 1d(24h)以上なのでリセット対象

case: nowがlastの1年後
年までちゃんとみてれば問題なし

ーーーーー

Editの仕様問題：
１、Fragはいつでも破棄・再生成される
２、Fragはコンストラクタで何も受け取れない
３、FragのVMは、必ずFrag側から作成する必要あり（外から入れられない）
４、FragのVMは、編集処理をやるので、作成時に編集対象が必要
５、追加リストは親FragのVMが持っている
６、編集用モデルはアダプタが持っている
７、Fragは親Fragもアダプタも知らない
８、FragのVMはプロバイダを使えば同一インスタンスを取れる
（だが、編集対象はどこ？）
・・・。
追加の方は、VMにObservableを持たせてViewから監視して
Modelが作られたら更新、で画面のリスト、DB共になんとかなるかも
それならVMは元のリストを知る必要ない
更新は・・・リストはともかく「どれを変更」は必要で
それをどこから持ってくる？かは考えるとして
VMに変更対象を持たせない路線、で考えることは可能？
それができるなら解決する。

EditとListのVMを統合するって手もあるな
EditだけあってListがないってことはないから、EditのStateを
全部ListのVMが持ってても別に変ではない
→activityViewmodels()使えばListとEditでVM共有できる
そしたら変更対象持てるしListももちろんある
→とりまこれでいく、全部解決する気がする

ーーーー
本番用Ad
ca-app-pub-6749297740122592/9018836519

テスト用Ad
ca-app-pub-3940256099942544/6300978111